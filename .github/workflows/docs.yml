name: PUBLISH DOCS
on:
  workflow_dispatch:
  workflow_call:
  # or set up your own custom triggers
permissions:
  contents: write # allows the 'Deploy' step without tokens

jobs:
  get_history: # create an artifact from the existing documentation builds
    runs-on: ubuntu-latest
    steps:

    - name: get the gh-pages repo
      uses: actions/checkout@v3
      with:
        ref: gh-pages

    - name: tar the existing docs
      run: |
        mkdir -p ./docs
        tar -cvf documentation.tar ./docs

    - name: create a document artifact
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: documentation.tar

  build:
    needs: get_history
    runs-on: ubuntu-latest
    steps:

      - name: Checkout src # checks out the source code into the active workspace
        uses: actions/checkout@v3

      - run: mkdir -p ./docs
      - name: Download the existing documents artifact # retrieves and un-archives the existing documents
        uses: actions/download-artifact@v3
        with:
          name: documentation
      - run: tar -xf documentation.tar ./docs -C ./docs

      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci # installs npm packages
      - run: npm run build # set up 'build' script in your package.json

      - name: Build documents
      #set up 'docs' build script in your package.json
        run: npm run docs
      - name: tar the new docs
        run: tar -cvf newdocumentation.tar ./docs

      - name: create a new document artifact
        uses: actions/upload-artifact@v3
        with:
          name: newdocumentation
          path: newdocumentation.tar

  commit:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: get the gh-pages repo
      uses: actions/checkout@v3
      with:
        ref: gh-pages

    - run: mkdir -p ./docs
    - name: Download the new documents artifact # retrieves and un-archives the new documents
      uses: actions/download-artifact@v3
      with:
        name: newdocumentation
    - run: tar -xf newdocumentation.tar ./docs -C ./docs
    - run: ls -R

    - name: commit
      run: |
        git config --global user.email "username@users.noreply.github.com"
        git config --global user.name "Continuous Integration"
        git add .
        git commit -m "CI updated the documentation"
        git push

